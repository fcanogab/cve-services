// baseRepository for Mongoose
const mongoose = require('mongoose')


class baseRepository {

    constructor (model) {
        this.mongoose = mongoose;
        if (typeof model === 'string') {
            this.collection = mongoose.model(model);
        } else {
            this.collection = model;
        }
    }

    async aggregate (aggregation) {
        return this.collection.aggregate(aggregation)
    }

    async find (query = {}, {multiple = true, count, lean } = {}) {
        const results = multiple
            ? this.collection.find(query)
            : this.collection.findOne(query)
        if (count) {
            return results.countDocuments().exec()
        } else if (lean) {
            return results.lean().exec()
        } else {
            return results.exec()
        }
    }

    async findOne (id) {
        this.collection.findOne({})
        throw new Error('Method not implemented.');
    }
    async create (body) {
        const document = new this.collection.create(body);
        return document.save()
    }
    async update (document, body = {}) {
        const id = (typeof document._id !== 'undefined')
        ? document._id
        : document
        return this.collection.findByIdAndUpdate(id, body, { new: true })
    }
    async delete (document) {
        throw new Error('Method not implemented.');
    }

    async countDocuments (query) {
        return this.collection.countDocuments(query)
    }


}

module.exports = baseRepository;